Weekly Summary
James Vaughn

------------------------------------------------------------------------------------
Week 4: 2018-03-21
Changes to the Gantt schedule:
---

Files changed:
-src/main/java/frequency/DWT/DWTEncoder
I messed with the interface for performing the Haar Transform
I have made the logic for handling the haar transform as a proof-of-concept for grey-scale images.
I just need to perform the LSB embedding now.

Work done:
I got haar transform logic to work well enough to at least play with and experiment with.
Everything for haar is done. I just need to implement the embedding and DWT is done.

Non-code work done:
I spent a few hours talking with various professors and by myself reviewing the math and logic behind the haar transform.
I believe I now have a good grasp on how it works and the operations it performs.

------------------------------------------------------------------------------------
Week 3: 2018-03-08
Changes to the Gantt schedule:
I am working on DWT before DCT due to DWT having less ambiguity

Files changed:
-src/main/java/frequency/DWT/*
I added a main method which will be able to do all of the application logic one the encoder is done.
I also have started working out the logic for the encoder. I added HaarTransform as a placeholder for when I implement it.

Work done:
I finished the application logic, so all I will need to do now is implement the encoder logic.
I wrote out the pseudo code that will implement the encode and decode functions.
I just need to figure out how the Haar Wavelet Transform works, and then I can start implementing all of the code

Non-code work done:
I spent some time working out the exact logic used in the paper which describes DWT and I have a good understanding now of how it works.
I am currently working with our math advisor to understand how the actual Discrete and Haar transforms work so I can implement or at least work out the logic for it.

------------------------------------------------------------------------------------
Week 2: 2018-03-02
Changes to the Gantt schedule:
I am continuing to work on some of the easier techniques to give me more time to research DWT as it is pretty involved.

Files changed:
-src/main/java/spatial/LSB/Main
I added the command line parsing to the encoder logic so the application can be controlled more easily for doing measurements

-src/main/java/spatial/LSB/LeastSignificantBitEncoder
I refactored the logic to be cleaner and pulled out the bit iterator and bit builder logic into another file

-src/main/java/lib/*
I added the bit iterator and bit builder utility classes to the project as a whole since they are useful for all techniques

-src/main/java/warden/BitDeletion/*
I created the bit deletion warden. I finished its implementation and the main application logic, so it is done.

Work done:
I added command line parsing to LSB. I also made the bit iterator and bit builder logic cleaner and available for use in the rest of the project.
Lastly, I completed the bit deletion warden and confirmed it is working as expected. It has consistent usage logic with the LSB encoder.
LSB and bit deletion are completely demoable and usable for collecting measurements.

Non-code work done:
I finished looking into the various techniques at a high level.
I am focusing my research more on DWT at the moment and am looking more into how it can be implemented.

------------------------------------------------------------------------------------
Week 1: 2018-02-23
Changes to the Gantt schedule:
I need more time to properly research frequency base stego techniques, so this week I implemented LSB instead as it is easy and gives me time to research more.

Files changed:
-src/main/spatial/LSB/Main
I added the main application logic for testing out the encoder. It has hardcoded locations for resources to use for encoding.
It needs to be generalized, but it works for demoing LSB encoding.

-src/main/spatial/LSB/LeastSignificantBitEncoder
I implemented LSB encoding and decoding completely.
The code should be cleaned up, and the bit iterator can be pulled into a different file.

Work done:
I have completely implemented a demoable version of LSB steganography.
It handles decoding and encoding independently, so we can use it to automatically encode and decode messages during our measurements.
The main application can be made more general, however this is a proof-of-concept.

Non-code work done:
I have been researching the different frequency domain techniques (DCT and DWT) so I have a better idea of what is needed and what issues we may encounter.

------------------------------------------------------------------------------------